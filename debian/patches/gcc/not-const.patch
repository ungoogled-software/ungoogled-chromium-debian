description: gcc requires std::vector value types to be non-const
author: Michael Gilbert <mgilbert@debian.org>

--- a/net/dns/dns_util.cc
+++ b/net/dns/dns_util.cc
@@ -139,12 +139,12 @@ struct DohUpgradeEntry {
   const DnsConfig::DnsOverHttpsServerConfig dns_over_https_config;
 };
 
-const std::vector<const DohUpgradeEntry>& GetDohUpgradeList() {
+const std::vector<DohUpgradeEntry>& GetDohUpgradeList() {
   // The provider names in these entries should be kept in sync with the
   // DohProviderId histogram suffix list in
   // tools/metrics/histograms/histograms.xml.
-  static const base::NoDestructor<std::vector<const DohUpgradeEntry>>
-      upgradable_servers({
+  static const base::NoDestructor<std::vector<DohUpgradeEntry>>
+      upgradable_servers(std::vector<DohUpgradeEntry>{
           DohUpgradeEntry(
               "CleanBrowsingAdult",
               {"185.228.168.10", "185.228.169.11", "2a0d:2a00:1::1",
@@ -222,7 +222,7 @@ const std::vector<const DohUpgradeEntry>
 std::vector<const DohUpgradeEntry*> GetDohUpgradeEntriesFromNameservers(
     const std::vector<IPEndPoint>& dns_servers,
     const std::vector<std::string>& excluded_providers) {
-  const std::vector<const DohUpgradeEntry>& upgradable_servers =
+  const std::vector<DohUpgradeEntry>& upgradable_servers =
       GetDohUpgradeList();
   std::vector<const DohUpgradeEntry*> entries;
 
@@ -417,7 +417,7 @@ std::vector<DnsConfig::DnsOverHttpsServe
 GetDohUpgradeServersFromDotHostname(
     const std::string& dot_server,
     const std::vector<std::string>& excluded_providers) {
-  const std::vector<const DohUpgradeEntry>& upgradable_servers =
+  const std::vector<DohUpgradeEntry>& upgradable_servers =
       GetDohUpgradeList();
   std::vector<DnsConfig::DnsOverHttpsServerConfig> doh_servers;
 
@@ -451,7 +451,7 @@ GetDohUpgradeServersFromNameservers(
 
 std::string GetDohProviderIdForHistogramFromDohConfig(
     const DnsConfig::DnsOverHttpsServerConfig& doh_server) {
-  const std::vector<const DohUpgradeEntry>& upgradable_servers =
+  const std::vector<DohUpgradeEntry>& upgradable_servers =
       GetDohUpgradeList();
   for (const auto& upgrade_entry : upgradable_servers) {
     if (doh_server.server_template ==
