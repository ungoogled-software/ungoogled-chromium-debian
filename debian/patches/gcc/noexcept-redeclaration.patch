description: gcc refuses to compile methods redeclared with noexcept
author: Michael Gilbert <mgilbert@debian.org>

--- a/media/learning/common/labelled_example.cc
+++ b/media/learning/common/labelled_example.cc
@@ -21,7 +21,7 @@ LabelledExample::LabelledExample(std::in
 
 LabelledExample::LabelledExample(const LabelledExample& rhs) = default;
 
-LabelledExample::LabelledExample(LabelledExample&& rhs) noexcept = default;
+LabelledExample::LabelledExample(LabelledExample&& rhs) = default;
 
 LabelledExample::~LabelledExample() = default;
 
--- a/components/omnibox/browser/autocomplete_match.cc
+++ b/components/omnibox/browser/autocomplete_match.cc
@@ -163,7 +163,7 @@ AutocompleteMatch::AutocompleteMatch(con
       additional_info(match.additional_info),
       duplicate_matches(match.duplicate_matches) {}
 
-AutocompleteMatch::AutocompleteMatch(AutocompleteMatch&& match) noexcept =
+AutocompleteMatch::AutocompleteMatch(AutocompleteMatch&& match) =
     default;
 
 AutocompleteMatch::~AutocompleteMatch() {
--- a/cc/trees/layer_tree_host_impl.cc
+++ b/cc/trees/layer_tree_host_impl.cc
@@ -250,7 +250,7 @@ LayerTreeHostImpl::FrameData::FrameData(
 LayerTreeHostImpl::FrameData::~FrameData() = default;
 LayerTreeHostImpl::UIResourceData::UIResourceData() = default;
 LayerTreeHostImpl::UIResourceData::~UIResourceData() = default;
-LayerTreeHostImpl::UIResourceData::UIResourceData(UIResourceData&&) noexcept =
+LayerTreeHostImpl::UIResourceData::UIResourceData(UIResourceData&&) =
     default;
 LayerTreeHostImpl::UIResourceData& LayerTreeHostImpl::UIResourceData::operator=(
     UIResourceData&&) = default;
--- a/components/history/core/browser/history_types.cc
+++ b/components/history/core/browser/history_types.cc
@@ -186,7 +186,7 @@ QueryURLResult::QueryURLResult(QueryURLR
 
 QueryURLResult& QueryURLResult::operator=(const QueryURLResult&) = default;
 
-QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) noexcept = default;
+QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) = default;
 
 // MostVisitedURL --------------------------------------------------------------
 
--- a/content/browser/indexed_db/scopes/disjoint_range_lock_manager.cc
+++ b/content/browser/indexed_db/scopes/disjoint_range_lock_manager.cc
@@ -19,7 +19,7 @@ DisjointRangeLockManager::LockRequest::L
     : requested_type(type),
       locks_holder(std::move(locks_holder)),
       acquired_callback(std::move(acquired_callback)) {}
-DisjointRangeLockManager::LockRequest::LockRequest(LockRequest&&) noexcept =
+DisjointRangeLockManager::LockRequest::LockRequest(LockRequest&&) =
     default;
 DisjointRangeLockManager::LockRequest::~LockRequest() = default;
 DisjointRangeLockManager::Lock::Lock() = default;
--- a/third_party/blink/renderer/modules/mediastream/media_stream_constraints_util.cc
+++ b/third_party/blink/renderer/modules/mediastream/media_stream_constraints_util.cc
@@ -135,12 +135,12 @@ VideoCaptureSettings::VideoCaptureSettin
 VideoCaptureSettings::VideoCaptureSettings(const VideoCaptureSettings& other) =
     default;
 VideoCaptureSettings::VideoCaptureSettings(
-    VideoCaptureSettings&& other) noexcept = default;
+    VideoCaptureSettings&& other) = default;
 VideoCaptureSettings::~VideoCaptureSettings() = default;
 VideoCaptureSettings& VideoCaptureSettings::operator=(
     const VideoCaptureSettings& other) = default;
 VideoCaptureSettings& VideoCaptureSettings::operator=(
-    VideoCaptureSettings&& other) noexcept = default;
+    VideoCaptureSettings&& other) = default;
 
 AudioCaptureSettings::AudioCaptureSettings() : AudioCaptureSettings("") {}
 
@@ -167,9 +167,9 @@ AudioCaptureSettings::AudioCaptureSettin
 AudioCaptureSettings& AudioCaptureSettings::operator=(
     const AudioCaptureSettings& other) = default;
 AudioCaptureSettings::AudioCaptureSettings(
-    AudioCaptureSettings&& other) noexcept = default;
+    AudioCaptureSettings&& other) = default;
 AudioCaptureSettings& AudioCaptureSettings::operator=(
-    AudioCaptureSettings&& other) noexcept = default;
+    AudioCaptureSettings&& other) = default;
 
 bool GetConstraintValueAsBoolean(
     const WebMediaConstraints& constraints,
--- a/third_party/blink/renderer/core/messaging/blink_cloneable_message.cc
+++ b/third_party/blink/renderer/core/messaging/blink_cloneable_message.cc
@@ -9,9 +9,9 @@ namespace blink {
 BlinkCloneableMessage::BlinkCloneableMessage() = default;
 BlinkCloneableMessage::~BlinkCloneableMessage() = default;
 
-BlinkCloneableMessage::BlinkCloneableMessage(BlinkCloneableMessage&&) noexcept =
+BlinkCloneableMessage::BlinkCloneableMessage(BlinkCloneableMessage&&) =
     default;
 BlinkCloneableMessage& BlinkCloneableMessage::operator=(
-    BlinkCloneableMessage&&) noexcept = default;
+    BlinkCloneableMessage&&) = default;
 
 }  // namespace blink
--- a/third_party/blink/renderer/core/messaging/blink_transferable_message.cc
+++ b/third_party/blink/renderer/core/messaging/blink_transferable_message.cc
@@ -16,9 +16,9 @@ BlinkTransferableMessage::BlinkTransfera
 BlinkTransferableMessage::~BlinkTransferableMessage() = default;
 
 BlinkTransferableMessage::BlinkTransferableMessage(
-    BlinkTransferableMessage&&) noexcept = default;
+    BlinkTransferableMessage&&) = default;
 BlinkTransferableMessage& BlinkTransferableMessage::operator=(
-    BlinkTransferableMessage&&) noexcept = default;
+    BlinkTransferableMessage&&) = default;
 
 scoped_refptr<blink::StaticBitmapImage> ToStaticBitmapImage(
     const SkBitmap& sk_bitmap) {
--- a/third_party/blink/renderer/platform/weborigin/origin_access_entry.cc
+++ b/third_party/blink/renderer/platform/weborigin/origin_access_entry.cc
@@ -59,7 +59,7 @@ OriginAccessEntry::OriginAccessEntry(
                network::mojom::CorsPortMatchMode::kAllowOnlySpecifiedPort,
                priority) {}
 
-OriginAccessEntry::OriginAccessEntry(OriginAccessEntry&& from) noexcept =
+OriginAccessEntry::OriginAccessEntry(OriginAccessEntry&& from) =
     default;
 
 network::cors::OriginAccessEntry::MatchResult OriginAccessEntry::MatchesOrigin(
