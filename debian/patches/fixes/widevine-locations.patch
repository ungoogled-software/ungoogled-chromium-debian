Description: try alternative locations for the Widevine CDM library:
  - $HOME/.local/lib/WidevineCdm/ (snap-friendly, see https://launchpad.net/bugs/1738149)
  - /opt/google/chrome/WidevineCdm/ (installed by official google chrome package)
 The manifest lives at the top level, whereas libwidevinecdm.so is inside
 a platform specific directory, see media::GetPlatformSpecificDirectory(â€¦).
Author: Olivier Tilloy <olivier.tilloy@canonical.com>

Source: https://bazaar.launchpad.net/~chromium-team/chromium-browser/disco-dev/view/head:/debian/patches/widevine-other-locations

--- a/chrome/common/chrome_paths.cc
+++ b/chrome/common/chrome_paths.cc
@@ -317,6 +317,15 @@ bool PathProvider(int key, base::FilePath* result) {
 #if (defined(OS_LINUX) || defined(OS_CHROMEOS)) && \
     BUILDFLAG(BUNDLE_WIDEVINE_CDM)
     case chrome::DIR_BUNDLED_WIDEVINE_CDM:
+      base::PathService::Get(base::DIR_HOME, &cur);
+      cur = cur.Append(FILE_PATH_LITERAL(".local/lib"))
+               .AppendASCII(kWidevineCdmBaseDirectory);
+      if (base::PathExists(cur))
+        break;
+      cur = base::FilePath(FILE_PATH_LITERAL("/opt/google/chrome"))
+               .AppendASCII(kWidevineCdmBaseDirectory);
+      if (base::PathExists(cur))
+        break;
       if (!GetComponentDirectory(&cur))
         return false;
 #if !BUILDFLAG(IS_CHROMEOS_ASH)
--- a/third_party/widevine/cdm/BUILD.gn
+++ b/third_party/widevine/cdm/BUILD.gn
@@ -16,7 +16,7 @@ buildflag_header("buildflags") {
 
   flags = [
     "ENABLE_WIDEVINE=$enable_widevine",
-    "BUNDLE_WIDEVINE_CDM=$bundle_widevine_cdm",
+    "BUNDLE_WIDEVINE_CDM=true",
     "ENABLE_WIDEVINE_CDM_COMPONENT=$enable_widevine_cdm_component",
   ]
 }
