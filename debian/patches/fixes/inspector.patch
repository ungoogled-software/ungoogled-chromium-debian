description: use inspector_protocol from top level third_party dir
author: Michael Gilbert <mgilbert@debian.org>

--- a/v8/src/inspector/BUILD.gn
+++ b/v8/src/inspector/BUILD.gn
@@ -4,7 +4,7 @@
 
 import("../../gni/v8.gni")
 
-_inspector_protocol = v8_path_prefix + "/third_party/inspector_protocol"
+_inspector_protocol = "../../../third_party/inspector_protocol"
 import("$_inspector_protocol/inspector_protocol.gni")
 
 _protocol_generated = [
@@ -95,7 +95,7 @@ v8_source_set("inspector") {
   deps = [
     ":inspector_string_conversions",
     "../..:v8_version",
-    "../../third_party/inspector_protocol:crdtp",
+    "../../../third_party/inspector_protocol:crdtp",
   ]
 
   public_deps = [
--- a/v8/test/unittests/BUILD.gn
+++ b/v8/test/unittests/BUILD.gn
@@ -296,7 +296,7 @@ v8_source_set("unittests_sources") {
     "../..:v8_for_testing",
     "../..:v8_libbase",
     "../..:v8_libplatform",
-    "../../third_party/inspector_protocol:crdtp_test",
+    "../../../third_party/inspector_protocol:crdtp_test",
     "//build/win:default_exe_manifest",
     "//testing/gmock",
     "//testing/gtest",
--- a/v8/src/inspector/inspector_protocol_config.json
+++ b/v8/src/inspector/inspector_protocol_config.json
@@ -47,6 +47,6 @@
     },
 
     "crdtp": {
-        "namespace": "v8_crdtp"
+        "namespace": "crdtp"
     }
 }
--- a/v8/src/inspector/v8-inspector-session-impl.cc
+++ b/v8/src/inspector/v8-inspector-session-impl.cc
@@ -25,11 +25,11 @@
 
 namespace v8_inspector {
 namespace {
-using v8_crdtp::span;
-using v8_crdtp::SpanFrom;
-using v8_crdtp::Status;
-using v8_crdtp::json::ConvertCBORToJSON;
-using v8_crdtp::json::ConvertJSONToCBOR;
+using crdtp::span;
+using crdtp::SpanFrom;
+using crdtp::Status;
+using crdtp::json::ConvertCBORToJSON;
+using crdtp::json::ConvertJSONToCBOR;
 
 bool IsCBORMessage(const StringView& msg) {
   return msg.is8Bit() && msg.length() >= 2 && msg.characters8()[0] == 0xd8 &&
@@ -335,8 +335,8 @@ void V8InspectorSessionImpl::reportAllCo
 
 void V8InspectorSessionImpl::dispatchProtocolMessage(
     const StringView& message) {
-  using v8_crdtp::span;
-  using v8_crdtp::SpanFrom;
+  using crdtp::span;
+  using crdtp::SpanFrom;
   span<uint8_t> cbor;
   std::vector<uint8_t> converted_cbor;
   if (IsCBORMessage(message)) {
