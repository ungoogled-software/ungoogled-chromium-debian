description: fix mojo layout test build error
author: Michael Gilbert <mgilbert@debian.org>

--- a/BUILD.gn
+++ b/BUILD.gn
@@ -1039,8 +1039,6 @@
       ":layout_test_data_mojo_bindings",
       ":layout_test_data_mojo_bindings_lite",
       "//content/shell:content_shell",
-      "//content/test:mojo_bindings_web_test_mojom_js_data_deps",
-      "//content/test:mojo_web_test_bindings_js_data_deps",
       "//device/bluetooth/public/mojom:fake_bluetooth_interfaces_js_data_deps",
       "//device/vr/public/mojom:vr_service_js_data_deps",
       "//media/capture/mojom:image_capture_js_data_deps",
@@ -1074,8 +1072,6 @@
         "//third_party/breakpad:symupload",
         "//tools/android/forwarder2",
       ]
-    } else {
-      data_deps += [ "//content/web_test:web_test_common_mojom_js_data_deps" ]
     }
 
     if (!is_win && !is_android) {
--- a/content/browser/BUILD.gn
+++ b/content/browser/BUILD.gn
@@ -2898,7 +2898,6 @@ group("for_content_tests") {
   visibility = [
     "//content/public/test/android/*",
     "//content/test/*",
-    "//content/web_test:web_test_browser",
   ]
   if (!is_component_build) {
     public_deps = [ ":browser" ]
--- a/content/renderer/BUILD.gn
+++ b/content/renderer/BUILD.gn
@@ -564,7 +564,6 @@ target(link_target_type, "renderer") {
 group("for_content_tests") {
   visibility = [
     "//content/test/*",
-    "//content/web_test:web_test_renderer",
   ]
 
   if (!is_component_build) {
--- a/content/shell/BUILD.gn
+++ b/content/shell/BUILD.gn
@@ -43,7 +43,7 @@ config("content_shell_lib_warnings") {
 }
 
 # Web test support not built on android, but is everywhere else.
-support_web_tests = !is_android
+support_web_tests = false
 
 source_set("android_shell_descriptors") {
   testonly = true
--- a/content/shell/app/shell_main_delegate.h
+++ b/content/shell/app/shell_main_delegate.h
@@ -19,10 +19,6 @@ class ShellContentGpuClient;
 class ShellContentRendererClient;
 class ShellContentUtilityClient;
 
-#if !defined(OS_ANDROID)
-class WebTestBrowserMainRunner;
-#endif
-
 class ShellMainDelegate : public ContentMainDelegate {
  public:
   explicit ShellMainDelegate(bool is_content_browsertests = false);
@@ -52,13 +48,6 @@ class ShellMainDelegate : public ContentMainDelegate {
   // content_browsertests should not set the kRunWebTests command line flag, so
   // |is_content_browsertests_| and |web_test_runner_| are mututally exclusive.
   bool is_content_browsertests_;
-#if !defined(OS_ANDROID)
-  // Only present when running web tests, which run inside Content Shell.
-  //
-  // Web tests are not browser tests, so |is_content_browsertests_| and
-  // |web_test_runner_| are mututally exclusive.
-  std::unique_ptr<WebTestBrowserMainRunner> web_test_runner_;
-#endif
 
   std::unique_ptr<ShellContentBrowserClient> browser_client_;
   std::unique_ptr<ShellContentGpuClient> gpu_client_;
--- a/content/shell/app/shell_main_delegate.cc
+++ b/content/shell/app/shell_main_delegate.cc
@@ -40,12 +40,6 @@
     content::RegisterIPCLogger(msg_id, logger)
 #endif
 
-#if !defined(OS_ANDROID)
-#include "content/web_test/browser/web_test_browser_main_runner.h"  // nogncheck
-#include "content/web_test/browser/web_test_content_browser_client.h"  // nogncheck
-#include "content/web_test/renderer/web_test_content_renderer_client.h"  // nogncheck
-#endif
-
 #if defined(OS_ANDROID)
 #include "base/android/apk_assets.h"
 #include "base/posix/global_descriptors.h"
@@ -170,17 +164,6 @@ bool ShellMainDelegate::BasicStartupComplete(int* exit_code) {
 
   InitLogging(command_line);
 
-#if !defined(OS_ANDROID)
-  if (switches::IsRunWebTestsSwitchPresent()) {
-    const bool browser_process =
-        command_line.GetSwitchValueASCII(switches::kProcessType).empty();
-    if (browser_process) {
-      web_test_runner_ = std::make_unique<WebTestBrowserMainRunner>();
-      web_test_runner_->Initialize();
-    }
-  }
-#endif
-
   return false;
 }
 
@@ -230,16 +213,6 @@ int ShellMainDelegate::RunProcess(
       kTraceEventBrowserProcessSortIndex);
 
 #if !defined(OS_ANDROID)
-  if (switches::IsRunWebTestsSwitchPresent()) {
-    // Web tests implement their own BrowserMain() replacement.
-    web_test_runner_->RunBrowserMain(main_function_params);
-    web_test_runner_.reset();
-    // Returning 0 to indicate that we have replaced BrowserMain() and the
-    // caller should not call BrowserMain() itself. Web tests do not ever
-    // return an error.
-    return 0;
-  }
-
   // On non-Android, we can return -1 and have the caller run BrowserMain()
   // normally.
   return -1;
@@ -331,12 +304,6 @@ ContentClient* ShellMainDelegate::CreateContentClient() {
 }
 
 ContentBrowserClient* ShellMainDelegate::CreateContentBrowserClient() {
-#if !defined(OS_ANDROID)
-  if (switches::IsRunWebTestsSwitchPresent()) {
-    browser_client_ = std::make_unique<WebTestContentBrowserClient>();
-    return browser_client_.get();
-  }
-#endif
   browser_client_ = std::make_unique<ShellContentBrowserClient>();
   return browser_client_.get();
 }
@@ -347,12 +314,6 @@ ContentGpuClient* ShellMainDelegate::CreateContentGpuClient() {
 }
 
 ContentRendererClient* ShellMainDelegate::CreateContentRendererClient() {
-#if !defined(OS_ANDROID)
-  if (switches::IsRunWebTestsSwitchPresent()) {
-    renderer_client_ = std::make_unique<WebTestContentRendererClient>();
-    return renderer_client_.get();
-  }
-#endif
   renderer_client_ = std::make_unique<ShellContentRendererClient>();
   return renderer_client_.get();
 }
--- a/third_party/blink/tools/BUILD.gn
+++ b/third_party/blink/tools/BUILD.gn
@@ -66,8 +66,6 @@ group("wpt_tests_base_mojo_bindings") {
   data_deps = [
     "//:layout_test_data_mojo_bindings",
     "//:layout_test_data_mojo_bindings_lite",
-    "//content/test:mojo_bindings_web_test_mojom_js_data_deps",
-    "//content/test:mojo_web_test_bindings_js_data_deps",
     "//mojo/public/interfaces/bindings/tests:test_data_deps",
     "//mojo/public/js/ts/bindings/tests:test_interfaces_js_data_deps",
     "//mojo/public/mojom/base:base_js_data_deps",
