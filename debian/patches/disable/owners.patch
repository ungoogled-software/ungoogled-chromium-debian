description: owners.py is not in the -lite tarball, remove function that uses it
author: Michael Gilbert <mgilbert@debian.org>

--- a/tools/flags/list_flags.py
+++ b/tools/flags/list_flags.py
@@ -21,7 +21,6 @@ sys.path.append(PYJSON5_PATH)
 sys.path.append(DEPOT_TOOLS_PATH)
 
 import json5
-import owners
 
 
 def load_metadata():
@@ -55,35 +54,6 @@ def keep_never_expires(flags):
   return [f for f in flags if f['expiry_milestone'] == -1]
 
 
-def resolve_owners(flags):
-  """Resolves sets of owners for every flag in the provided list.
-
-  Given a list of flags, for each flag, resolves owners for that flag. Resolving
-  owners means, for each entry in a flag's owners list:
-  * Turning owners files references into the transitive set of owners listed in
-    those files
-  * Turning bare usernames into @chromium.org email addresses
-  * Passing any other type of entry through unmodified
-  """
-
-  owners_db = owners.Database(ROOT_PATH, open, os.path)
-
-  new_flags = []
-  for f in flags:
-    new_flag = f.copy()
-    new_owners = []
-    for o in f['owners']:
-      if o.startswith('//') or '/' in o:
-        new_owners += owners_db.owners_rooted_at_file(re.sub('//', '', o))
-      elif '@' not in o:
-        new_owners.append(o + '@chromium.org')
-      else:
-        new_owners.append(o)
-    new_flag['resolved_owners'] = new_owners
-    new_flags.append(new_flag)
-  return new_flags
-
-
 def print_flags(flags, verbose):
   """Prints the supplied list of flags.
 
--- a/tools/metrics/histograms/histograms.xml
+++ b/tools/metrics/histograms/histograms.xml
@@ -4237,7 +4237,6 @@ uploading your change for review.
 <histogram name="Android.WebView.Metrics.BackfillInstallDate"
     enum="InstallDateBackfill" expires_after="M83">
   <owner>ntfschr@chromium.org</owner>
-  <owner>src/android_webview/OWNERS</owner>
   <summary>
     Records whether WebView needed to backfill the install date pref with
     Android frameworks APIs. Recorded once during startup (metrics service
@@ -4307,7 +4306,6 @@ uploading your change for review.
 <histogram name="Android.WebView.PrefLoadTime" units="ms"
     expires_after="2020-12-01">
   <owner>rmcelrath@chromium.org</owner>
-  <owner>src/android_webview/OWNERS</owner>
   <summary>
     Records how long WebView blocks startup to load prefs from disk. This is
     recorded once per browser process startup.
@@ -161986,7 +161984,6 @@ regressions. -->
     expires_after="2020-11-01">
   <owner>rmcelrath@chromium.org</owner>
   <owner>ntfschr@chromium.org</owner>
-  <owner>src/android_webview/OWNERS</owner>
   <summary>
     The time interval between when a WebView-using app's copy of the variations
     seed was written to its local app storage and when it was loaded for use.
@@ -162002,7 +161999,6 @@ regressions. -->
     expires_after="2020-11-01">
   <owner>rmcelrath@chromium.org</owner>
   <owner>ntfschr@chromium.org</owner>
-  <owner>src/android_webview/OWNERS</owner>
   <summary>
     The result of checking if a WebView-using app's copy of the variations seed
     is still fresh, or if a new seed should be requested.
@@ -162245,7 +162241,6 @@ regressions. -->
     expires_after="2020-11-01">
   <owner>rmcelrath@chromium.org</owner>
   <owner>ntfschr@chromium.org</owner>
-  <owner>src/android_webview/OWNERS</owner>
   <summary>
     Number of consecutive times WebView started up with a stale seed. Only
     written by WebView, when its loaded seed is fresh after previously being
