description: use system nspr library
author: Michael Gilbert <mgilbert@debian.org>

--- a/base/time/pr_time_unittest.cc
+++ b/base/time/pr_time_unittest.cc
@@ -7,7 +7,7 @@
 
 #include "base/compiler_specific.h"
 #include "base/stl_util.h"
-#include "base/third_party/nspr/prtime.h"
+#include <nspr/prtime.h>
 #include "base/time/time.h"
 #include "build/build_config.h"
 #include "testing/gtest/include/gtest/gtest.h"
--- a/base/time/time.cc
+++ b/base/time/time.cc
@@ -14,7 +14,7 @@
 #include "base/macros.h"
 #include "base/no_destructor.h"
 #include "base/strings/stringprintf.h"
-#include "base/third_party/nspr/prtime.h"
+#include <nspr/prtime.h>
 #include "base/time/time_override.h"
 #include "build/build_config.h"
 
--- a/base/BUILD.gn
+++ b/base/BUILD.gn
@@ -93,6 +93,9 @@ config("base_flags") {
       "-Wglobal-constructors",
     ]
   }
+  ldflags = [
+    "-lnspr4",
+  ]
 }
 
 config("base_implementation") {
@@ -881,8 +884,6 @@ jumbo_component("base") {
     "third_party/cityhash/city.h",
     "third_party/icu/icu_utf.cc",
     "third_party/icu/icu_utf.h",
-    "third_party/nspr/prtime.cc",
-    "third_party/nspr/prtime.h",
     "third_party/superfasthash/superfasthash.c",
     "thread_annotations.h",
     "threading/platform_thread.cc",
--- a/tools/gn/build/gen.py
+++ b/tools/gn/build/gen.py
@@ -327,6 +327,8 @@ def WriteGNNinja(path, platform, host, o
       ldflags.extend([
           '-Wl,--as-needed',
       ])
+      # Additional system libraries that are used.
+      libs.append('-lnspr4')
       # This is needed by libc++.
       libs.append('-ldl')
     elif platform.is_darwin():
