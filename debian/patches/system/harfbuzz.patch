description: use system harfbuzz
author: Michael Gilbert <mgilbert@debian.org>

--- a/third_party/skia/src/pdf/SkPDFSubsetFont.cpp
+++ b/third_party/skia/src/pdf/SkPDFSubsetFont.cpp
@@ -7,6 +7,9 @@
 #include "SkLoadICU.h"
 #endif
 
+#undef SK_PDF_USE_SFNTLY
+#undef SK_PDF_USE_HARFBUZZ_SUBSET
+
 #if defined(SK_PDF_USE_HARFBUZZ_SUBSET)
 
 #include "include/private/SkTemplates.h"
--- a/third_party/harfbuzz-ng/BUILD.gn
+++ b/third_party/harfbuzz-ng/BUILD.gn
@@ -19,7 +19,6 @@ if (use_system_harfbuzz) {
     ]
     packages = [
       "harfbuzz",
-      "harfbuzz-subset",
     ]
   }
 } else {
--- a/components/paint_preview/common/subset_font.cc
+++ b/components/paint_preview/common/subset_font.cc
@@ -6,7 +6,6 @@
 
 // clang-format off
 #include <hb.h>
-#include <hb-subset.h>
 // clang-format on
 
 #include <memory>
--- a/components/paint_preview/common/serial_utils.cc
+++ b/components/paint_preview/common/serial_utils.cc
@@ -65,12 +65,8 @@ sk_sp<SkData> SerializeTypeface(SkTypefa
   if (usage_it == context->usage->end())
     return typeface->serialize(SkTypeface::SerializeBehavior::kDontIncludeData);
 
-  auto subset_data = SubsetFont(typeface, *usage_it->second);
-  // This will fail if the font cannot be subsetted properly. In such cases
-  // all typeface data should be added for portability.
-  if (!subset_data)
+  if (true)
     return typeface->serialize(SkTypeface::SerializeBehavior::kDoIncludeData);
-  return subset_data;
 }
 
 sk_sp<SkData> SerializeImage(SkImage* image, void* ctx) {
--- a/components/paint_preview/common/BUILD.gn
+++ b/components/paint_preview/common/BUILD.gn
@@ -23,8 +23,6 @@ if (!is_ios) {
       "serial_utils.h",
       "serialized_recording.cc",
       "serialized_recording.h",
-      "subset_font.cc",
-      "subset_font.h",
       "version.cc",
       "version.h",
     ]
--- a/third_party/skia/BUILD.gn
+++ b/third_party/skia/BUILD.gn
@@ -989,7 +989,6 @@ optional("pdf") {
   sources_when_disabled = [ "src/pdf/SkDocument_PDF_None.cpp" ]
   if (skia_use_icu && skia_use_harfbuzz && skia_pdf_subset_harfbuzz) {
     deps += [ "//third_party/harfbuzz" ]
-    defines = [ "SK_PDF_USE_HARFBUZZ_SUBSET" ]
   } else if (skia_use_icu && skia_use_sfntly) {
     deps += [ "//third_party/sfntly" ]
     defines = [ "SK_PDF_USE_SFNTLY" ]
--- a/third_party/harfbuzz-ng/utils/hb_scoped.h
+++ b/third_party/harfbuzz-ng/utils/hb_scoped.h
@@ -7,7 +7,6 @@
 
 // clang-format off
 #include <hb.h>
-#include <hb-subset.h>
 // clang-format on
 
 #include <memory>
@@ -53,7 +52,6 @@ using HbScoped = std::unique_ptr<T, HbSp
   F(hb_face_t, hb_face_destroy)            \
   F(hb_font_t, hb_font_destroy)            \
   F(hb_set_t, hb_set_destroy)              \
-  F(hb_subset_input_t, hb_subset_input_destroy)
 
 HB_TYPE_DESTRUCTOR_PAIRS_REPEAT(SPECIALIZED_DELETER_FOR_HARFBUZZ_TYPE)
 
